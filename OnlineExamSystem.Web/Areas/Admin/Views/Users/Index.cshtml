@model IEnumerable<OnlineExamSystem.Web.ViewModels.UserViewModel>
@{
    ViewData["Title"] = "Users Management";
    Layout = "_AdminLayout";
}

<div class="container mx-auto px-4 sm:px-8">
    <div class="py-8">
        <div class="flex flex-row mb-1 sm:mb-0 justify-between w-full">
            <h2 class="text-2xl leading-tight text-white">User Management</h2>
            <div></div>
        </div>
        <div class="-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto">
            <div class="inline-block min-w-full shadow-md rounded-lg overflow-hidden">
                <table class="min-w-full leading-normal">
                    <thead>
                        <tr>
                            <th class="px-5 py-3 border-b border-gray-700 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider">Username</th>
                            <th class="px-5 py-3 border-b border-gray-700 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider">Role</th>
                            <th class="px-5 py-3 border-b border-gray-700 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider">Status</th>
                            <th class="px-5 py-3 border-b border-gray-700 bg-gray-800 text-left text-xs font-semibold text-gray-300 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr class="hover:bg-gray-700">
                                <td class="px-5 py-5 border-b border-gray-700 text-sm">
                                    <p class="text-gray-300 whitespace-no-wrap">@user.UserName</p>
                                </td>
                                <td class="px-5 py-5 border-b border-gray-700 text-sm">
                                    <div class="flex flex-wrap gap-1">
                                        @foreach (var role in user.Roles)
                                        {
                                            <span class="px-2 py-1 text-xs rounded-full bg-blue-900 text-blue-300">@role</span>
                                        }
                                    </div>
                                </td>
                                <td class="px-5 py-5 border-b border-gray-700 text-sm">
                                    @if (user.IsActive)
                                    {
                                        <span class="px-2 py-1 text-xs rounded-full bg-green-900 text-green-300">Active</span>
                                    }
                                    else
                                    {
                                        <span class="px-2 py-1 text-xs rounded-full bg-red-900 text-red-300">Inactive</span>
                                    }
                                </td>
                                <td class="px-5 py-5 border-b border-gray-700 text-sm">
                                    <div class="flex space-x-2">
                                        <button class="text-blue-500 hover:text-blue-400" onclick="editUser('@user.Id')">Edit</button>
                                        <button class="text-red-500 hover:text-red-400" onclick="deleteUser('@user.Id')">Delete</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editUser(userId) {
            // TODO: Implement edit user functionality
            console.log('Edit user:', userId);
        }

        function deleteUser(userId) {
            // TODO: Implement delete user functionality
            console.log('Delete user:', userId);
        }

        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchText = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchText) ? '' : 'none';
            });
        });
    </script>
}